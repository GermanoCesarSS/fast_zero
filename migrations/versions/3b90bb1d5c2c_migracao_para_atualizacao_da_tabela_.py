"""Migracao para atualizacao da tabela todos

Revision ID: 3b90bb1d5c2c
Revises: 148c10fa1199
Create Date: 2024-11-26 20:07:40.833630

"""
from datetime import datetime
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3b90bb1d5c2c'
down_revision: Union[str, None] = '148c10fa1199'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('todos', sa.Column('created_at', sa.DateTime(),nullable=True))
    op.add_column('todos', sa.Column(
        'updated_at', sa.DateTime(), nullable=True)
    )
    # ### end Alembic commands ### server_default=sa.text('(CURRENT_TIMESTAMP)'), onupdate=sa.func.now()

    # Preencher valores existentes com a data atual
    now = datetime.now()
    op.execute(f"UPDATE todos SET created_at = '{now}', updated_at = '{now}'")

    with op.batch_alter_table('todos') as batch_op:
       batch_op.alter_column('created_at', server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False)
       batch_op.alter_column('updated_at', server_default=sa.text('(CURRENT_TIMESTAMP)'), onupdate=sa.func.now(), nullable=False)

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('todos', 'updated_at')
    op.drop_column('todos', 'created_at')
    # ### end Alembic commands ###
